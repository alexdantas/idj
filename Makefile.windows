# Terminus Window's cross-compiling Makefile
#
# This file compiles FOR Windows ON Linux
# It assumes you have 'mxe' nand installed SDL for windows
# on /opt/SDL-1.2.13
#
# http://mxe.cc/#tutorial

########## There are the things that you CAN edit
# Executable name
EXE     = windows/trabalho4.exe

# Compilation/linking flags
SDL_ROOT_DIR = /opt/SDL-1.2.13
CFLAGS       = -g `$(SDL_ROOT_DIR)/bin/i586-mingw32msvc-sdl-config --cflags`
CXXFLAGS     = -g `$(SDL_ROOT_DIR)/bin/i586-mingw32msvc-sdl-config --cflags` \
               -Wall -Wextra
LDFLAGS      = `$(SDL_ROOT_DIR)/bin/i586-mingw32msvc-sdl-config --libs` \
               -lSDL_image -lSDL_ttf -lSDL_mixer

CC      = i586-mingw32msvc-gcc
CXX     = i586-mingw32msvc-g++

# All libraries we'll use on the projects
LIB_TMXPARSER   = src/lib/TmxParser
LIB_TINYXML     = src/lib/TmxParser/tinyxml
LIB_ZLIB        = src/lib/TmxParser/zlib
LIB_BASE64      = src/lib/TmxParser/base64

# And where we'll find them
LIBS_CFILES     = $(shell find  $(LIB_TMXPARSER) \
                                $(LIB_TINYXML)   \
                                $(LIB_ZLIB)      \
                                $(LIB_BASE64)    \
                                -maxdepth 1 -type f -name '*.c')


LIBS_CXXFILES    =  $(shell find $(LIB_TMXPARSER) \
                                 $(LIB_TINYXML)   \
                                 $(LIB_ZLIB)      \
                                 $(LIB_BASE64)    \
                                 -maxdepth 1 -type f -name '*.cpp')

# Finally, which directories we should include
INCLUDE   = -I$(LIB_TMXPARSER)          \
            -I$(LIB_TINYXML)            \
            -I$(LIB_ZLIB)               \
            -I$(LIB_BASE64)             \
            -I"$(SDL_ROOT_DIR)/include" \
            -I"$(SDL_ROOT_DIR)/include/SDL"

# All C file sources of the projects
CFILES     = $(shell find src -maxdepth 1 -type f -name '*.c')
COBJECTS   = $(CFILES:.c=.o)

# All C++ file sources of the projects
CXXFILES   = $(shell find src -maxdepth 1 -type f -name '*.cpp')
CXXOBJECTS = $(CXXFILES:.cpp=.o)

# All of them summed up
SOURCES    = $(CFILES)   $(CXXFILES)
OBJECTS    = $(COBJECTS) $(CXXOBJECTS)

LIBS_COBJECTS   = $(LIBS_CFILES:.c=.o)
LIBS_CXXOBJECTS = $(LIBS_CXXFILES:.cpp=.o)

LIBS_SOURCES    = $(LIBS_CFILES)   $(LIBS_CXXFILES)
LIBS_OBJECTS    = $(LIBS_COBJECTS) $(LIBS_CXXOBJECTS) src/lib/SDL_Config/SDL_config.o

all: dirs $(EXE)
	# Build successful!

$(EXE): $(OBJECTS) $(LIBS_OBJECTS)
	# Linking...
	$(CXX) $(OBJECTS) $(LIBS_OBJECTS) -o $(EXE) $(LDFLAGS)

src/%.o: src/%.cpp
	# Compiling $<...
	$(CXX) $(CFLAGS) $(INCLUDE) $< -c -o $@

src/%.o: src/%.c
	# Compiling $<...
	$(CC) $(CFLAGS) $(INCLUDE) $< -c -o $@

# This needed to be added manually
src/lib/SDL_Config/SDL_config.o: src/lib/SDL_Config/SDL_config.c
	# Compiling SDL_Config...
	$(MUTE)$(CXX) $< -c -o $@ $(INCLUDE) -fexpensive-optimizations -O3

run: all
	wine $(EXE)

clean:
	# Cleaning...
	-rm -f $(EXE) $(OBJECTS)

libclean: clean
	-rm -f $(LIBS_OBJECTS)

dirs:
	@mkdir -p windows/img windows/ogg windows/ttf windows/map
	@unix2dos -n README.txt  windows/README.txt
	@unix2dos -n config.ini windows/config.ini
	@cp -r img/*   windows/img
	@cp -r ogg/*   windows/ogg
	@cp -r ttf/*   windows/ttf
	@cp -r map/*   windows/map

# Distribution zip
ZIPNAME = sdl-test
VERSION = 1.0
DISTDIR = $(ZIPNAME)-$(VERSION)
DISTDIRS = $(DISTDIR)/img $(DISTDIR)/ogg $(DISTDIR)/ttf \
           $(DISTDIR)/map

# Creates a zip file with release version
dist: all $(DISTDIR).zip

$(DISTDIR).zip: $(DISTDIR)
	$(MUTE)zip -r $(DISTDIR).zip $(DISTDIR)
	$(MUTE)rm -rf $(DISTDIR)

$(DISTDIR):
	$(MUTE)mkdir -p $(DISTDIRS)
	-$(MUTE)cp windows/* -t $(DISTDIR)
	-$(MUTE)cp -r img/* $(DISTDIR)/img
	-$(MUTE)cp -r ogg/* $(DISTDIR)/ogg
	-$(MUTE)cp -r ttf/* $(DISTDIR)/ttf
	-$(MUTE)cp -r map/* $(DISTDIR)/map

# Uploads results on a website
WEBSITE = alexdantas.net
USER	= alexd075
WEB_DIR = public_html/projects/sdl-test

up: all dist
	# Uploading results to ${WEBSITE}...
	@rsync -avze "ssh -p 2222" $(DISTDIR).zip ${USER}@${WEBSITE}:$(WEB_DIR)
